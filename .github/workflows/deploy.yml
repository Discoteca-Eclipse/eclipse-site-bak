name: 🚀 Deploy Astro to EC2 via SSM

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build Astro Site
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📦 Install dependencies
        run: bun install --frozen-lockfile

      - name: 🏰️ Build for production
        env:
          PUBLIC_API_URL: ${{ secrets.PUBLIC_API_URL }}
        run: bun run build -- --production

      - name: 📬 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: astro-dist
          path: dist

  deploy:
    name: Deploy to EC2 via SSM
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 🔄 Get Latest Artifact ID
        id: get-artifact-id
        run: |
          ARTIFACT_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" | \
            jq -r '.artifacts | map(select(.name == "astro-dist")) | first.id')

          if [ "$ARTIFACT_ID" == "null" ]; then
            echo "Error: No artifact found!"
            exit 1
          fi

          echo "ARTIFACT_ID=$ARTIFACT_ID" >> $GITHUB_ENV

      - name: 🔄 Deploy to EC2 using SSM
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets Key=instanceIds,Values=${{ secrets.EC2_INSTANCE_ID }} \
            --parameters 'commands=[
              "export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}",
              "export OWNER=${{ github.repository_owner }}",
              "export REPO=${{ github.event.repository.name }}",
              "ARTIFACT_ID=$(curl -s -H \"Authorization: token $GITHUB_TOKEN\" -H \"Accept: application/vnd.github.v3+json\" \"https://api.github.com/repos/$OWNER/$REPO/actions/artifacts\" | jq -r \".artifacts | map(select(.name == \\\"astro-dist\\\")) | first.id\")",
              "if [ \"$ARTIFACT_ID\" == \"null\" ]; then echo \"Error: No artifact found!\"; exit 1; fi",
              "curl -H \"Authorization: token $GITHUB_TOKEN\" -H \"Accept: application/vnd.github.v3+json\" -L \"https://api.github.com/repos/$OWNER/$REPO/actions/artifacts/$ARTIFACT_ID/zip\" -o /tmp/astro-dist.zip",
              "mkdir -p ${{ secrets.DEPLOY_PATH }}",
              "rm -rf ${{ secrets.DEPLOY_PATH }}/*",
              "unzip -o /tmp/astro-dist.zip -d ${{ secrets.DEPLOY_PATH }}",
              "rm -f /tmp/astro-dist.zip"
            ]' \
            --region ${{ secrets.AWS_REGION }}
